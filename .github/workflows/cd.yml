name: 🛠️ Build and publish Docker images to GitHub Registry

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/**"
      - "apps/client/**"
      - "apps/server/**"
      - "packages/common/**"
      - "docker/**"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    name: 🛠️ Build and push Docker images
    if: github.actor != 'argocd-image-updater'
    runs-on: ubuntu-latest
    outputs:
      server_digest: ${{ steps.server-digest.outputs.digest }}
      client_digest: ${{ steps.client-digest.outputs.digest }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: 🧩 Checkout repository
        uses: actions/checkout@v4

      - name: 🧩 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🧩 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 📲 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔨 Build and push Docker image (server)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.server
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server:latest

      - name: 🔨 Build and push Docker image (client)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/Dockerfile.client
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-client:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: 🕵️ Get digest of server image
        id: server-digest
        run: |
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ env.IMAGE_NAME }}-server:${{ github.sha }} --raw | jq -r '.manifest.digest')
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: 🕵️ Get digest of client image
        id: client-digest
        run: |
          DIGEST=$(docker buildx imagetools inspect ghcr.io/${{ env.IMAGE_NAME }}-client:${{ github.sha }} --raw | jq -r '.manifest.digest')
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

  deploy:
    name: 🚀 Deploy to GKE via Helm
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 🛡️ Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 📡 Set GKE context
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_LOCATION }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: 💡 Install Helm
        uses: azure/setup-helm@v3

      - name: ➕ Add Bitnami repo
        run: helm repo add bitnami https://charts.bitnami.com/bitnami
    
      - name: 🔧 Build Helm dependencies
        run: helm dependency build infra/helm/party

      - name: 🚀 Deploy with Helm
        run: |
          helm upgrade --install party-app \
            infra/helm/party \
            --namespace party \
            --create-namespace \
            --set server.image.digest=${{ needs.build-and-push.outputs.server_digest }} \
            --set client.image.digest=${{ needs.build-and-push.outputs.client_digest }}

